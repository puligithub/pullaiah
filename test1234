from(bucket: "your_bucket_name")
  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
  |> filter(fn: (r) => r._measurement == "otel.receiver")
  |> filter(fn: (r) => r._field == "receiver_accepted_spans" or r._field == "receiver_accepted_metrics" or r._field == "receiver_accepted_logs")
  |> filter(fn: (r) => r.receiver != "")
  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)
  |> yield(name: "receiver_counts")




---
apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kcontroller
  namespace: confluent
spec:
  replicas: 3  # For production, use at least 3 for high availability
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  dataVolumeCapacity: "100Gi"
  configOverrides:
    server:
      - process.roles=controller
      - node.id=1
      - broker.id=1
      - controller.listener.names=CONTROLLER
      - listeners=CONTROLLER://broker:29093
      - controller.quorum.voters=1@broker.confluent.svc.cluster.local:29093
      - log.dirs=/tmp/kraft-combined-logs
      - cluster.id=MkU3OEVBNTcwNTJENDM2Qk
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  replicas: 3  # Adjust replica count as needed
  image:
    application: confluentinc/cp-server:7.9.0
    init: confluentinc/confluent-init-container:2.11.0
  dataVolumeCapacity: "100Gi"
  # Reference the pre-created KRaftController cluster
  configOverrides:
    server:
      # Unique node identifier for this Kafka instance
      - node.id=1
      - broker.id=1
      # Map listener names to security protocols (all PLAINTEXT in this example)
      - listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # Endpoints advertised to clients
      - advertised.listeners=PLAINTEXT://broker.confluent.svc.cluster.local:29092,PLAINTEXT_HOST://broker.confluent.svc.cluster.local:9092
      # Topic and transaction replication settings (adjust for production)
      - offsets.topic.replication.factor=1
      - group.initial.rebalance.delay.ms=0
      - transaction.state.log.min.isr=1
      - transaction.state.log.replication.factor=1
      # JMX settings for monitoring
      - jmx.port=9101
      - jmx.hostname=localhost
      # This process runs both broker and controller roles (if desired)
      - process.roles=broker,controller
      # Controller quorum voters – should match the controller setup
      - controller.quorum.voters=1@broker:29093
      # Define the listeners for this combined process
      - listeners=PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9092
      # Broker-to-broker communication uses the PLAINTEXT listener
      - inter.broker.listener.name=PLAINTEXT
      # Specify the controller listener names
      - controller.listener.names=CONTROLLER
      # Directory for log storage
      - log.dirs=/tmp/kraft-combined-logs
      # Unique cluster identifier (must match the controller’s cluster.id)
      - cluster.id=MkU3OEVBNTcwNTJENDM2Qk
